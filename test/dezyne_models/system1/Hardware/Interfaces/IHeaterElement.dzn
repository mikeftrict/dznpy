// Three times an IHeaterElement interface.
//
// For testing purposes (e.g. look up by FQN/scope name) this file intentionally contains three
// interface models, plus, these interfaces have the same name but intentionally reside in different namespaces.
//

namespace Some { namespace Vendor {

interface IHeaterElement // #1
{
// Lifecycle operations
in void Initialize();
in void Uninitialize();

// Heater operations
in void On();
in void Off();

subint ExampleInt {0 .. 9};

behavior
{
    enum State
    {
        Uninitialized,
        Off,
        Heating
    };
    State s = State.Uninitialized; // initial state

    // Event-based handling:
    on Uninitialize: s = State.Uninitialized;

    // State-based handling:
    [s.Uninitialized]
    {
        on Initialize: s = State.Off;
    }

    [s.Off]
    {
        on On: s = State.Heating;
    }

    [s.Heating]
    {
        on Off: s = State.Off;
    }
} // behaviour
} // interface
}} // end namespace Some::Vendor

namespace My { namespace Project {

interface IHeaterElement // #2
{
in void Second();

behavior
{
    on Second: {}

} // behaviour
} // interface
}} // end namespace My::Project

interface IHeaterElement // #3 in global namespace√∏
{
in void Third();

behavior
{
    on Third: {}

} // behaviour
} // interface
