{"<class>": "root", "comment": {"<class>": "comment", "string": "// ToasterSystem\n//\n// Description: a Dezyne system comprising a Toaster, timer and required port dependencies\n//\n// Contained component(s)\n"}, "elements": [{"<class>": "file-name", "name": "./Toaster.dzn"}, {"<class>": "import", "name": "IToaster.dzn"}, {"<class>": "import", "name": "Hardware/Interfaces/IHeaterElement.dzn"}, {"<class>": "import", "name": "Hardware/Interfaces/IPowerCord.dzn"}, {"<class>": "import", "name": "Hardware/Interfaces/ILed.dzn"}, {"<class>": "import", "name": "ITimer.dzn"}, {"<class>": "import", "name": "IConfiguration.dzn"}, {"<class>": "import", "name": "Types.dzn"}, {"<class>": "namespace", "name": {"<class>": "scope_name", "ids": ["My"]}, "elements": [{"<class>": "namespace", "name": {"<class>": "scope_name", "ids": ["Project"]}, "elements": [{"<class>": "component", "name": {"<class>": "scope_name", "ids": ["Toaster"]}, "ports": {"<class>": "ports", "elements": [{"<class>": "port", "name": "api", "type_name": {"<class>": "scope_name", "ids": ["IToaster"]}, "direction": "provides", "formals": {"<class>": "formals", "elements": []}}, {"<class>": "port", "name": "heater", "type_name": {"<class>": "scope_name", "ids": ["Some", "Vendor", "IHeaterElement"]}, "direction": "requires", "formals": {"<class>": "formals", "elements": []}}, {"<class>": "port", "name": "cord", "type_name": {"<class>": "scope_name", "ids": ["Hal", "IPowerCord"]}, "direction": "requires", "formals": {"<class>": "formals", "elements": []}}, {"<class>": "port", "name": "led", "type_name": {"<class>": "scope_name", "ids": ["ILed"]}, "direction": "requires", "formals": {"<class>": "formals", "elements": []}}, {"<class>": "port", "name": "timer", "type_name": {"<class>": "scope_name", "ids": ["ITimer"]}, "direction": "requires", "formals": {"<class>": "formals", "elements": []}}, {"<class>": "port", "name": "cfg", "type_name": {"<class>": "scope_name", "ids": ["IConfiguration"]}, "direction": "requires", "formals": {"<class>": "formals", "elements": []}, "injected?": "injected"}]}, "behavior": {"<class>": "behavior", "types": {"<class>": "types", "elements": [{"<class>": "enum", "name": {"<class>": "scope_name", "ids": ["State"]}, "fields": {"<class>": "fields", "elements": ["Uninitialized", "Idle", "Toasting", "Error"]}}]}, "variables": {"<class>": "variables", "elements": [{"<class>": "variable", "name": "s", "type_name": {"<class>": "scope_name", "ids": ["State"]}, "expression": {"<class>": "enum-literal", "expression": "undefined", "type_name": {"<class>": "scope_name", "ids": ["State"]}, "field": "Uninitialized"}}, {"<class>": "variable", "name": "m_toastingTime", "type_name": {"<class>": "scope_name", "ids": ["MilliSeconds"]}, "expression": {"<class>": "literal", "expression": "undefined", "value": "void"}}, {"<class>": "variable", "name": "m_storeSomething", "type_name": {"<class>": "scope_name", "ids": ["MyLongNamedType"]}, "expression": {"<class>": "literal", "expression": "undefined", "value": "void"}}]}, "functions": {"<class>": "functions", "elements": [{"<class>": "function", "name": "Initialize", "signature": {"<class>": "signature", "type_name": {"<class>": "scope_name", "ids": ["void"]}, "formals": {"<class>": "formals", "elements": []}}, "noisy?": 